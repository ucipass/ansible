---
- hosts: all
  become: true
  tasks:
  - name: Update and upgrade apt packages
    become: true
    apt:
      upgrade: "yes"
      update_cache: yes
      cache_valid_time: 86400 #One day
  - name: Comment out swap in fstab since kubernetes can't work with swap enabled
    become: true
    replace:
      path: /etc/fstab
      regexp: '^([^#].*?\sswap\s+sw\s+.*)$'
      replace: '# \1'
    register: swap
  - name: Disable SWAP, if needed, since kubernetes can't work with swap enabled
    shell: |
      swapoff --all
    when: swap.changed
  - name: Set hostnames
    become: true
    hostname:
      name: "{{inventory_hostname}}"
    register: hostname
  - name: reboot if needed 
    become: true
    reboot:
      reboot_timeout: 240  
    when: hostname.changed
  - name: Install a list of packages to allow HTTPS pull for repositories
    become: yes
    apt:
      pkg:
      - apt-transport-https
      - ca-certificates 
      - curl
      - software-properties-common 
      - gnupg2
#
# DOCKER INSTALL SECTION
#
  - name: Add Docker's official GPG key                                 
    become: yes
    apt_key:
      url: https://download.docker.com/linux/ubuntu/gpg          
      state: present
  - name: Add the Docker apt repository                                  
    become: yes
    apt_repository:
      repo: deb [arch=amd64] https://download.docker.com/linux/ubuntu focal stable
      state: present
  - name: Update apt packages
    become: true
    apt:
      upgrade: "no"
      update_cache: yes
      cache_valid_time: 86400 #One day
  - name: Install Docker CE              
    become: true
    apt:
      pkg:
      - containerd.io=1.2.13-2
      - docker-ce=5:19.03.11~3-0~ubuntu-focal
      - docker-ce-cli=5:19.03.11~3-0~ubuntu-focal
  - name: Hold containerd,docker-ce, docker-ce-cli
    dpkg_selections:
      name: "{{item}}"
      selection: hold
    with_items:
      - containerd.io
      - docker-ce
      - docker-ce-cli
  - name: Ensure systemd is set for cgroupdriver
    become: yes
    lineinfile:
      path: /usr/lib/systemd/system/docker.service
      regexp: '^ExecStart='
      line: "ExecStart=/usr/bin/dockerd -H fd:// --containerd=/run/containerd/containerd.sock --exec-opt native.cgroupdriver=systemd"
  - name: Create /etc/systemd/system/docker.service.d
    become: yes
    file:
      path: /etc/systemd/system/docker.service.d
      state: directory
  - name: Just force systemd to reread configs
    become: yes
    systemd:
      daemon_reload: yes
#  - name: Enable Docker Service
#    become: yes
#    systemd:
#      name: docker.service
#      state: started
#      enabled: yes

#
# KUBEADM INSTALL SECTION
#
  - name: Letting iptables see bridged traffic
    become: yes
    blockinfile:
      path: /etc/sysctl.d/k8s.conf
      create: yes
      block: |
        net.bridge.bridge-nf-call-ip6tables = 1
        net.bridge.bridge-nf-call-iptables = 1
  - name: Install a list of packages to allow HTTPS pull for repositories
    become: yes
    apt:
      pkg:
      - apt-transport-https
      - ca-certificates
      - curl
      - software-properties-common
      - gnupg2
  - name: Add Kubernetes's official GPG key
    become: yes
    apt_key:
      url: https://packages.cloud.google.com/apt/doc/apt-key.gpg
      state: present
  - name: Add the Kubernetes apt repository
    become: yes
    apt_repository:
      repo: deb https://apt.kubernetes.io/ kubernetes-xenial main
      state: present
  - name: Update apt packages
    become: true
    apt:
      upgrade: "no"
      update_cache: yes
      cache_valid_time: 86400 #One day
  - name: Install Kubeadm, Kubectl, Kubelet
    become: true
    apt:
      pkg:
      - "kubeadm=1.19.4-00"
      - "kubectl=1.19.4-00"
      - "kubelet=1.19.4-00"
  - name: Hold kubeadm
    dpkg_selections:
      name: "{{item}}"
      selection: hold
    with_items:
      - kubeadm
      - kubectl
      - kubelet
  - name: initialize the cluster
    shell: kubeadm init --pod-network-cidr=10.254.0.0/16
    register: result
    until: result.stdout.find("Your Kubernetes master has initialized successfully!") != -1
    retries: 0
    delay: 60
  - name: Setup kubeconfig for local user
    command: "{{ item }}"
    with_items:
    - "mkdir -p /home/aarato/.kube"
    - "cp  /etc/kubernetes/admin.conf /home/aarato/.kube/config"
    - "chown aarato:aarato /home/aarato/.kube/config"
  - name: Add Calico Networking
    become: false
    command: kubectl apply -f https://docs.projectcalico.org/manifests/calico.yaml
